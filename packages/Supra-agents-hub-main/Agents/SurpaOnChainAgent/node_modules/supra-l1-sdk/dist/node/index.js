"use strict";var k=Object.create;var m=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var z=Object.getPrototypeOf,X=Object.prototype.hasOwnProperty;var V=(u,t)=>{for(var e in t)m(u,e,{get:t[e],enumerable:!0})},M=(u,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of G(t))!X.call(u,a)&&a!==e&&m(u,a,{get:()=>t[a],enumerable:!(n=$(t,a))||n.enumerable});return u};var F=(u,t,e)=>(e=u!=null?k(z(u)):{},M(t||!u||!u.__esModule?m(e,"default",{value:u,enumerable:!0}):e,u)),j=u=>M(m({},"__esModule",{value:!0}),u);var K={};V(K,{BCS:()=>i.BCS,DEFAULT_CHAIN_ID:()=>D,DEFAULT_ENABLE_SIMULATION:()=>b,DEFAULT_GAS_PRICE:()=>f,DEFAULT_MAX_GAS_FOR_SUPRA_TRANSFER_WHEN_RECEIVER_EXISTS:()=>N,DEFAULT_MAX_GAS_FOR_SUPRA_TRANSFER_WHEN_RECEIVER_NOT_EXISTS:()=>v,DEFAULT_MAX_GAS_UNITS:()=>x,DEFAULT_RECORDS_ITEMS_COUNT:()=>p,DEFAULT_TX_EXPIRATION_DURATION:()=>R,DEFAULT_WAIT_FOR_TX_COMPLETION:()=>w,DELAY_BETWEEN_POOLING_REQUEST:()=>H,HexString:()=>i.HexString,MAX_RETRY_FOR_TRANSACTION_COMPLETION:()=>J,MILLISECONDS_PER_SECOND:()=>E,RAW_TRANSACTION_SALT:()=>I,RAW_TRANSACTION_WITH_DATA_SALT:()=>P,SUPRA_FRAMEWORK_ADDRESS:()=>l,SupraAccount:()=>i.SupraAccount,SupraClient:()=>U,TransactionStatus:()=>A,TxTypeForTransactionInsights:()=>S,TxnBuilderTypes:()=>i.TxnBuilderTypes});module.exports=j(K);var i=require("supra-l1-sdk-core"),O=F(require("axios"));var T=u=>{let t=new Array;return u.forEach(e=>{let n=e.value;t.push({struct:{address:n.address.toHexString().toString(),module:n.module_name.value,name:n.name.value,type_args:T(n.type_args)}})}),t},_=u=>{let t=new Array;for(let e=0;e<u.length;e++)t.push(Array.from(u[e]));return t},y=u=>{let t=u.toLowerCase();if(t.length<66)return t.startsWith("0x")?t=t.slice(2).padStart(64,"0"):t=t.padStart(64,"0"),"0x"+t;if(t.length===66&&t.startsWith("0x"))return t;throw new Error("Invalid address. With '0x', address length should be exactly 66 characters.")},B=u=>new Promise(t=>{setTimeout(t,u)});var A=(n=>(n.Success="Success",n.Failed="Failed",n.Pending="Pending",n))(A||{}),S=(a=>(a.CoinTransfer="CoinTransfer",a.EntryFunctionCall="EntryFunctionCall",a.ScriptCall="ScriptCall",a.AutomationRegistration="AutomationRegistration",a))(S||{});var D=6,J=300,H=1e3,p=15,x=BigInt(5e5),f=BigInt(100),R=300,E=1e3,l="0x0000000000000000000000000000000000000000000000000000000000000001",b=!1,w=!1,N=10,v=1020,I="SUPRA::RawTransaction",P="SUPRA::RawTransactionWithData";var C=F(require("js-sha3"));var U=class u{constructor(t,e=6){this.supraNodeURL=t,this.chainId=new i.TxnBuilderTypes.ChainId(e)}static async init(t){let e=new u(t);return e.chainId=await e.getChainId(),e}async sendRequest(t,e,n){let a;if(t==!0)a=await(0,O.default)({method:"get",baseURL:this.supraNodeURL,url:e});else{if(n==null)throw new Error("For Post Request 'data' Should Not Be 'undefined'");a=await(0,O.default)({method:"post",baseURL:this.supraNodeURL,url:e,data:n,headers:{"Content-Type":"application/json"}})}if(a.status==404)throw new Error("Invalid URL, Path Not Found");return a}async getChainId(){return new i.TxnBuilderTypes.ChainId(Number((await this.sendRequest(!0,"/rpc/v1/transactions/chain_id")).data))}async getGasPrice(){return BigInt((await this.sendRequest(!0,"/rpc/v1/transactions/estimate_gas_price")).data.mean_gas_price)}async fundAccountWithFaucet(t){let e=await this.sendRequest(!0,`/rpc/v1/wallet/faucet/${t.toString()}`);if(typeof e.data=="object"){if(e.data.hasOwnProperty("Accepted"))return{status:await this.waitForTransactionCompletion(e.data.Accepted),transactionHash:e.data.Accepted};throw new Error("something went wrong, getting unexpected response from rpc_node")}else throw new Error("try faucet later")}async isAccountExists(t){let e=await this.sendRequest(!0,`/rpc/v1/accounts/${t.toString()}`);return!(e.data===null||e.status===202)}async getAccountInfo(t){let e=await this.sendRequest(!0,`/rpc/v1/accounts/${t.toString()}`);if(e.data==null)throw new Error("Account Not Exists, Or Invalid Account Is Passed");return{sequence_number:BigInt(e.data.sequence_number),authentication_key:e.data.authentication_key}}async getAccountResources(t,e){let n=`/rpc/v1/accounts/${t.toString()}/resources?count=${e?.count??15}`;return e?.start&&(n+=`&start=${e.start}`),(await this.sendRequest(!0,n)).data.Resources}async getResourceData(t,e){let n=await this.sendRequest(!0,`/rpc/v1/accounts/${t.toString()}/resources/${e}`);if(n.data.result[0]==null)throw new Error("Resource not found");return n.data.result[0]}async getTransactionStatus(t){let e=await this.sendRequest(!0,`/rpc/v1/transactions/${t}`);return e.data==null?null:e.data.status=="Unexecuted"?"Pending":e.data.status=="Fail"?"Failed":e.data.status}getCoinChangeAmount(t,e){let n=new Map;e.forEach(s=>{if((s.type==="0x1::coin::CoinDeposit"||s.type==="0x1::coin::CoinWithdraw")&&"0x"+s.data.account.substring(2,s.data.account).padStart(64,"0")===t){if(s.type==="0x1::coin::CoinDeposit"){let r=n.get(s.data.coin_type);r!=null?n.set(s.data.coin_type,{totalDeposit:r.totalDeposit+BigInt(s.data.amount),totalWithdraw:r.totalWithdraw}):n.set(s.data.coin_type,{totalDeposit:BigInt(s.data.amount),totalWithdraw:BigInt(0)})}else if(s.type==="0x1::coin::CoinWithdraw"){let r=n.get(s.data.coin_type);r!=null?n.set(s.data.coin_type,{totalDeposit:r.totalDeposit,totalWithdraw:r.totalWithdraw+BigInt(s.data.amount)}):n.set(s.data.coin_type,{totalDeposit:BigInt(0),totalWithdraw:BigInt(s.data.amount)})}}});let a=[];return n.forEach((s,r)=>{a.push({coinType:r,amount:s.totalDeposit-s.totalWithdraw})}),a}getTransactionInsights(t,e){let n={coinReceiver:"",coinChange:[{amount:BigInt(0),coinType:""}],type:"EntryFunctionCall"};if(e.payload.Move.type==="entry_function_payload")if(e.payload.Move.function==="0x1::supra_account::transfer"){let a=BigInt(e.payload.Move.arguments[1]);t===e.header.sender.Move&&(a*=BigInt(-1)),n.coinReceiver=e.payload.Move.arguments[0],n.coinChange[0]={amount:a,coinType:"0x1::supra_coin::SupraCoin"},n.type="CoinTransfer"}else if(e.payload.Move.function==="0x1::supra_account::transfer_coins"||e.payload.Move.function==="0x1::coin::transfer"){let a=BigInt(e.payload.Move.arguments[1]);t===e.header.sender.Move&&(a*=BigInt(-1)),n.coinReceiver=e.payload.Move.arguments[0],n.coinChange[0]={amount:a,coinType:e.payload.Move.type_arguments[0]},n.type="CoinTransfer"}else e.status==="Success"&&(n.coinChange=this.getCoinChangeAmount(t,e.output.Move.events));else{if(e.payload.Move.type==="script_payload")n.type="ScriptCall";else if(e.payload.Move.type==="automation_registration_payload")n.type="AutomationRegistration";else throw new Error("something went wrong, found unsupported type of transaction");e.status==="Success"&&(n.coinChange=this.getCoinChangeAmount(t,e.output.Move.events))}return n}async getTransactionDetail(t,e){let n=await this.sendRequest(!0,`/rpc/v1/transactions/${e}`);return n.data==null?null:n.data.status==="Pending"||n.data.output===null||n.data.header===null?{txHash:e,sender:n.data.header.sender.Move,sequenceNumber:n.data.header.sequence_number,maxGasAmount:n.data.header.max_gas_amount,gasUnitPrice:n.data.header.gas_unit_price,gasUsed:void 0,transactionCost:void 0,txExpirationTimestamp:Number(n.data.header.expiration_timestamp.microseconds_since_unix_epoch),txConfirmationTime:void 0,status:n.data.status,events:void 0,blockNumber:void 0,blockHash:void 0,transactionInsights:this.getTransactionInsights(t.toString(),n.data),vm_status:void 0}:{txHash:e,sender:n.data.header.sender.Move,sequenceNumber:n.data.header.sequence_number,maxGasAmount:n.data.header.max_gas_amount,gasUnitPrice:n.data.header.gas_unit_price,gasUsed:n.data.output?.Move.gas_used,transactionCost:n.data.header.gas_unit_price*n.data.output?.Move.gas_used,txExpirationTimestamp:Number(n.data.header.expiration_timestamp.microseconds_since_unix_epoch),txConfirmationTime:Number(n.data.block_header.timestamp.microseconds_since_unix_epoch),status:n.data.status=="Fail"||n.data.status=="Invalid"?"Failed":n.data.status,events:n.data.output?.Move.events,blockNumber:n.data.block_header.height,blockHash:n.data.block_header.hash,transactionInsights:this.getTransactionInsights(t.toString(),n.data),vm_status:n.data.output.Move.vm_status}}async getAccountTransactionsDetail(t,e){let n=`/rpc/v1/accounts/${t.toString()}/transactions?count=${e?.count??15}`;e?.start&&(n+=`&start=${e.start}`);let a=await this.sendRequest(!0,n);if(a.data.record==null)throw new Error("Account Not Exists, Or Invalid Account Is Passed");let s=[];return a.data.record.forEach(r=>{s.push({txHash:r.hash,sender:r.header.sender.Move,sequenceNumber:r.header.sequence_number,maxGasAmount:r.header.max_gas_amount,gasUnitPrice:r.header.gas_unit_price,gasUsed:r.output.Move.gas_used,transactionCost:r.header.gas_unit_price*r.output.Move.gas_used,txExpirationTimestamp:Number(r.header.expiration_timestamp.microseconds_since_unix_epoch),txConfirmationTime:Number(r.block_header.timestamp.microseconds_since_unix_epoch),status:r.status==="Fail"||r.status==="Invalid"?"Failed":r.status,events:r.output.Move.events,blockNumber:r.block_header.height,blockHash:r.block_header.hash,transactionInsights:this.getTransactionInsights(t.toString(),r),vm_status:r.output.Move.vm_status})}),s}async getCoinTransactionsDetail(t,e){let n=`/rpc/v1/accounts/${t.toString()}/coin_transactions?count=${e?.count??15}`;e?.start&&(n+=`&start=${e?.start}`);let a=await this.sendRequest(!0,n);if(a.data.record==null)throw new Error("Account Not Exists, Or Invalid Account Is Passed");let s=[];return a.data.record.forEach(r=>{s.push({txHash:r.hash,sender:r.header.sender.Move,sequenceNumber:r.header.sequence_number,maxGasAmount:r.header.max_gas_amount,gasUnitPrice:r.header.gas_unit_price,gasUsed:r.output.Move.gas_used,transactionCost:r.header.gas_unit_price*r.output.Move.gas_used,txExpirationTimestamp:Number(r.header.expiration_timestamp.microseconds_since_unix_epoch),txConfirmationTime:Number(r.block_header.timestamp.microseconds_since_unix_epoch),status:r.status==="Fail"||r.status==="Invalid"?"Failed":r.status,events:r.output.Move.events,blockNumber:r.block_header.height,blockHash:r.block_header.hash,transactionInsights:this.getTransactionInsights(t.toString(),r),vm_status:r.output.Move.vm_status})}),{transactions:s,cursor:a.data.cursor}}async getAccountCompleteTransactionsDetail(t,e=15){let n=await this.sendRequest(!0,`/rpc/v1/accounts/${t.toString()}/coin_transactions?count=${e}`),a=await this.sendRequest(!0,`/rpc/v1/accounts/${t.toString()}/transactions?count=${e}`),s=[];n.data.record!=null&&s.push(...n.data.record),a.data.record!=null&&s.push(...a.data.record);let r=s.filter((o,d,g)=>d===g.findIndex(h=>h.hash===o.hash));r.sort((o,d)=>o.block_header.timestamp.microseconds_since_unix_epoch<d.block_header.timestamp.microseconds_since_unix_epoch?1:-1);let c=[];return r.forEach(o=>{c.push({txHash:o.hash,sender:o.header.sender.Move,sequenceNumber:o.header.sequence_number,maxGasAmount:o.header.max_gas_amount,gasUnitPrice:o.header.gas_unit_price,gasUsed:o.output.Move.gas_used,transactionCost:o.header.gas_unit_price*o.output.Move.gas_used,txExpirationTimestamp:Number(o.header.expiration_timestamp.microseconds_since_unix_epoch),txConfirmationTime:Number(o.block_header.timestamp.microseconds_since_unix_epoch),status:o.status==="Fail"||o.status==="Invalid"?"Failed":o.status,events:o.output.Move.events,blockNumber:o.block_header.height,blockHash:o.block_header.hash,transactionInsights:this.getTransactionInsights(t.toString(),o),vm_status:o.output.Move.vm_status})}),c}async getCoinInfo(t){let e=await this.getResourceData(new i.HexString(t.split("::")[0]),`${l}::coin::CoinInfo<${t}>`);return{name:e.name,symbol:e.symbol,decimals:e.decimals}}async getAccountSupraCoinBalance(t){return BigInt((await this.getResourceData(t,"0x1::coin::CoinStore<0x1::supra_coin::SupraCoin>")).coin.value)}async getAccountCoinBalance(t,e){return BigInt((await this.getResourceData(t,`0x1::coin::CoinStore<${e}>`)).coin.value)}async invokeViewMethod(t,e,n){return(await this.sendRequest(!1,"/rpc/v1/view",{function:t,type_arguments:e,arguments:n})).data.result}async getTableItemByKey(t,e,n,a){return(await this.sendRequest(!1,`/rpc/v1/tables/${t}/item`,{key_type:e,value_type:n,key:a})).data}async waitForTransactionCompletion(t){for(let e=0;e<300;e++){let n=await this.getTransactionStatus(t);if(n===null||n=="Pending")await B(1e3);else return n}return"Pending"}async sendTx(t,e){(e?.enableTransactionSimulation??b)===!0&&await this.simulateTx(t);let n=await this.sendRequest(!1,"/rpc/v1/transactions/submit",t);return console.log("Transaction Request Sent, Waiting For Completion"),{txHash:n.data,result:(e?.enableWaitForTransaction??w)===!0?await this.waitForTransactionCompletion(n.data):"Pending"}}static getSupraTransactionSignatureMessage(t){let e=Uint8Array.from(Buffer.from(C.default.sha3_256(t instanceof i.TxnBuilderTypes.RawTransaction?I:P),"hex")),n=new Uint8Array(i.BCS.bcsToBytes(t)),a=new Uint8Array(e.length+n.length);return a.set(e),a.set(n,e.length),a}static signSupraTransaction(t,e){return t.signBuffer(u.getSupraTransactionSignatureMessage(e))}static signSupraMultiTransaction(t,e){let n=new i.TxnBuilderTypes.Ed25519Signature(u.signSupraTransaction(t,e).toUint8Array());return new i.TxnBuilderTypes.AccountAuthenticatorEd25519(new i.TxnBuilderTypes.Ed25519PublicKey(t.signingKey.publicKey),n)}getTransactionPayloadJSON(t){if(t instanceof i.TxnBuilderTypes.TransactionPayloadEntryFunction)return{EntryFunction:{module:{address:t.value.module_name.address.toHexString().toString(),name:t.value.module_name.name.value},function:t.value.function_name.value,ty_args:T(t.value.ty_args),args:_(t.value.args)}};if(t instanceof i.TxnBuilderTypes.TransactionPayloadAutomationRegistration){if(t.value instanceof i.TxnBuilderTypes.AutomationRegistrationParamsV1)return{AutomationRegistration:{V1:{automated_function:{module:{address:t.value.value.automated_function.module_name.address.toHexString().toString(),name:t.value.value.automated_function.module_name.name.value},function:t.value.value.automated_function.function_name.value,ty_args:T(t.value.value.automated_function.ty_args),args:_(t.value.value.automated_function.args)},max_gas_amount:Number(t.value.value.max_gas_amount),gas_price_cap:Number(t.value.value.gas_price_cap),automation_fee_cap_for_epoch:Number(t.value.value.automation_fee_cap_for_epoch),expiration_timestamp_secs:Number(t.value.value.expiration_timestamp_secs),aux_data:_(t.value.value.aux_data)}}};throw new Error("Unknown variant of `AutomationRegistrationParams`")}else throw new Error("Unknown variant of `TransactionPayload`")}getRawTxnJSON(t){return{sender:t.sender.toHexString().toString(),sequence_number:Number(t.sequence_number),payload:this.getTransactionPayloadJSON(t.payload),max_gas_amount:Number(t.max_gas_amount),gas_unit_price:Number(t.gas_unit_price),expiration_timestamp_secs:Number(t.expiration_timestamp_secs),chain_id:t.chain_id.value}}getSendTxPayload(t,e){return{Move:{raw_txn:this.getRawTxnJSON(e),authenticator:{Ed25519:{public_key:t.pubKey().toString(),signature:u.signSupraTransaction(t,e).toString()}}}}}async sendTxUsingSerializedRawTransaction(t,e,n){let a=this.getSendTxPayload(t,i.TxnBuilderTypes.RawTransaction.deserialize(new i.BCS.Deserializer(e)));return await this.sendTx(a,n)}async sendTxUsingSerializedRawTransactionAndSignature(t,e,n,a){let s={Move:{raw_txn:this.getRawTxnJSON(i.TxnBuilderTypes.RawTransaction.deserialize(new i.BCS.Deserializer(n))),authenticator:{Ed25519:{public_key:t.toString(),signature:e.toString()}}}};return await this.sendTx(s,a)}async sendSponsorTransaction(t,e,n,a,s,r=[],c){let o=[];r.forEach(g=>{o.push(this.getED25519AuthenticatorJSON(g))});let d={Move:{raw_txn:this.getRawTxnJSON(n),authenticator:{FeePayer:{sender:this.getED25519AuthenticatorJSON(a),secondary_signer_addresses:e,secondary_signers:o,fee_payer_address:t,fee_payer_signer:this.getED25519AuthenticatorJSON(s)}}}};return await this.sendTx(d,c)}async sendMultiAgentTransaction(t,e,n,a,s){let r=[];a.forEach(o=>{r.push(this.getED25519AuthenticatorJSON(o))});let c={Move:{raw_txn:this.getRawTxnJSON(e),authenticator:{MultiAgent:{sender:this.getED25519AuthenticatorJSON(n),secondary_signer_addresses:t,secondary_signers:r}}}};return await this.sendTx(c,s)}getED25519AuthenticatorJSON(t){return{Ed25519:{public_key:Buffer.from(t.public_key.value).toString("hex"),signature:Buffer.from(t.signature.value).toString("hex")}}}createRawTxObjectInner(t,e,n,a){return new i.TxnBuilderTypes.RawTransaction(new i.TxnBuilderTypes.AccountAddress(t.toUint8Array()),e,n,a?.maxGas??x,a?.gasUnitPrice??f,a?.txExpiryTime??BigInt(Math.ceil(Date.now()/E)+R),this.chainId)}async createRawTxObject(t,e,n,a,s,r,c,o){let d=new i.TxnBuilderTypes.TransactionPayloadEntryFunction(new i.TxnBuilderTypes.EntryFunction(new i.TxnBuilderTypes.ModuleId(new i.TxnBuilderTypes.AccountAddress(new i.HexString(y(n)).toUint8Array()),new i.TxnBuilderTypes.Identifier(a)),new i.TxnBuilderTypes.Identifier(s),r,c));return this.createRawTxObjectInner(t,e,d,o)}async createSerializedRawTxObject(t,e,n,a,s,r,c,o){return i.BCS.bcsToBytes(await this.createRawTxObject(t,e,n,a,s,r,c,o))}createSerializedAutomationRegistrationTxPayloadRawTxObject(t,e,n,a,s,r,c,o,d,g,h,W,q){let L=new i.TxnBuilderTypes.TransactionPayloadAutomationRegistration(new i.TxnBuilderTypes.AutomationRegistrationParamsV1(new i.TxnBuilderTypes.AutomationRegistrationParamsV1Data(new i.TxnBuilderTypes.EntryFunction(new i.TxnBuilderTypes.ModuleId(new i.TxnBuilderTypes.AccountAddress(new i.HexString(y(n)).toUint8Array()),new i.TxnBuilderTypes.Identifier(a)),new i.TxnBuilderTypes.Identifier(s),r,c),o,d,g,h,W)));return i.BCS.bcsToBytes(this.createRawTxObjectInner(t,e,L,q))}static createSignedTransaction(t,e){return new i.TxnBuilderTypes.SignedTransaction(e,new i.TxnBuilderTypes.AccountAuthenticatorEd25519(new i.TxnBuilderTypes.Ed25519PublicKey(t.pubKey().toUint8Array()),new i.TxnBuilderTypes.Ed25519Signature(u.signSupraTransaction(t,e).toUint8Array())))}static deriveTransactionHash(t){return C.default.keccak256(i.BCS.bcsToBytes(t))}async transferSupraCoin(t,e,n,a){if(a?.optionalTransactionPayloadArgs&&!a?.optionalTransactionPayloadArgs?.maxGas){let r=BigInt(N);await this.isAccountExists(e)==!1&&(r=BigInt(v)),a.optionalTransactionPayloadArgs.maxGas=r}let s=this.getSendTxPayload(t,await this.createRawTxObject(t.address(),(await this.getAccountInfo(t.address())).sequence_number,l,"supra_account","transfer",[],[e.toUint8Array(),i.BCS.bcsSerializeUint64(n)],a?.optionalTransactionPayloadArgs));return await this.sendTx(s,a?.enableTransactionWaitAndSimulationArgs)}async transferCoin(t,e,n,a,s){let r=this.getSendTxPayload(t,await this.createRawTxObject(t.address(),(await this.getAccountInfo(t.address())).sequence_number,l,"supra_account","transfer_coins",[new i.TxnBuilderTypes.TypeTagParser(a).parseTypeTag()],[e.toUint8Array(),i.BCS.bcsSerializeUint64(n)],s?.optionalTransactionPayloadArgs));return await this.sendTx(r,s?.enableTransactionWaitAndSimulationArgs)}async publishPackage(t,e,n,a){let s=new i.BCS.Serializer,r=[];for(let o=0;o<n.length;o++)r.push(new i.TxnBuilderTypes.Module(Uint8Array.from(n[o])));i.BCS.serializeVector(r,s);let c=this.getSendTxPayload(t,await this.createRawTxObject(t.address(),(await this.getAccountInfo(t.address())).sequence_number,l,"code","publish_package_txn",[],[i.BCS.bcsSerializeBytes(e),s.getBytes()],a?.optionalTransactionPayloadArgs));return await this.sendTx(c,a?.enableTransactionWaitAndSimulationArgs)}async simulateTx(t){let e=t.Move.authenticator,n=JSON.parse(JSON.stringify(e));t.Move.authenticator=n,this.unsetAuthenticatorSignatures(t.Move.authenticator);let a=await this.sendRequest(!1,"/rpc/v1/transactions/simulate",t);if(t.Move.authenticator=e,a.data.output.Move.vm_status!=="Executed successfully")throw new Error("Transaction Can Be Failed, Reason: "+a.data.output.Move.vm_status);return console.log("Transaction Simulation Done"),a.data}unsetAuthenticatorSignatures(t){let e="0x"+"0".repeat(128);"Ed25519"in t?t.Ed25519.signature=e:"FeePayer"in t?(t.FeePayer.sender.Ed25519.signature=e,t.FeePayer.fee_payer_signer.Ed25519.signature=e,t.FeePayer.secondary_signers.forEach(n=>{n.Ed25519.signature=e})):(t.MultiAgent.sender.Ed25519.signature=e,t.MultiAgent.secondary_signers.forEach(n=>{n.Ed25519.signature=e}))}async simulateTxUsingSerializedRawTransaction(t,e){let n={Move:{raw_txn:this.getRawTxnJSON(i.TxnBuilderTypes.RawTransaction.deserialize(new i.BCS.Deserializer(e))),authenticator:t}};return await this.simulateTx(n)}};0&&(module.exports={BCS,DEFAULT_CHAIN_ID,DEFAULT_ENABLE_SIMULATION,DEFAULT_GAS_PRICE,DEFAULT_MAX_GAS_FOR_SUPRA_TRANSFER_WHEN_RECEIVER_EXISTS,DEFAULT_MAX_GAS_FOR_SUPRA_TRANSFER_WHEN_RECEIVER_NOT_EXISTS,DEFAULT_MAX_GAS_UNITS,DEFAULT_RECORDS_ITEMS_COUNT,DEFAULT_TX_EXPIRATION_DURATION,DEFAULT_WAIT_FOR_TX_COMPLETION,DELAY_BETWEEN_POOLING_REQUEST,HexString,MAX_RETRY_FOR_TRANSACTION_COMPLETION,MILLISECONDS_PER_SECOND,RAW_TRANSACTION_SALT,RAW_TRANSACTION_WITH_DATA_SALT,SUPRA_FRAMEWORK_ADDRESS,SupraAccount,SupraClient,TransactionStatus,TxTypeForTransactionInsights,TxnBuilderTypes});
//# sourceMappingURL=index.js.map